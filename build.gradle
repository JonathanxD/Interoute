buildscript {
    apply from: 'gradle/versions.gradle'

    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:$license_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadow_version"
    }

}

group 'com.github.jonathanxd'
version '1.1.2-SNAPSHOT'

apply plugin: 'kotlin'
apply plugin: 'idea'

// Programming Language
apply plugin: 'java'

apply plugin: 'license'
apply plugin: 'com.github.johnrengelman.shadow'

license {
    header rootProject.file("LICENSE_HEADER")
}

defaultTasks 'licenseFormat', 'build', 'test', 'jar', 'shadowJar'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

// Tasks
jar {
    from "$rootProject.rootDir/LICENSE"

    manifest {
        attributes 'Implementation-Title': baseName,
                'Implementation-Version': version
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: classes) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task testJar(type: Jar, dependsOn: testClasses) {
    baseName = "test-${project.archivesBaseName}"
    from sourceSets.test.output
}

configurations {
    tests
}

artifacts {
    archives sourcesJar
    archives javadocJar
    tests testJar
}

dependencies {
    compile "com.github.JonathanxD.Kores:Kores:$kores_version"
    compile "com.github.JonathanxD.Kores-BytecodeWriter:Kores-BytecodeWriter:$kores_bytecode_version"
    compile "com.github.JonathanxD:Kores-Extra:$kores_extra_version"

    // Kotlin
    compile "com.github.JonathanxD.JwIUtils:JwIUtils:$iutils_version"
    compile "com.github.JonathanxD.JwIUtils:jwiutils-kt:$iutils_version"
    compile "com.github.JonathanxD.JwIUtils:specializations:$iutils_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-reflect"

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

test {
    useJUnit()
    systemProperty "env", "gradle"
}

license {
    ext.name = project.name
    ext.organization = project.organization
    ext.description = project.description
    ext.url = project.purl
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    ext.email = 'jonathan.scripter@programmer.net'

    exclude "**/*.info"
    exclude "**/*.md"
    exclude "res/**"
    exclude "src/main/resources/**"
    exclude "src/test/resources/**"

    header rootProject.file('LICENSE_HEADER')

    sourceSets = project.sourceSets

    ignoreFailures false
    strictCheck true

    mapping {
        java = 'SLASHSTAR_STYLE'
        kt = 'SLASHSTAR_STYLE'
    }
}
